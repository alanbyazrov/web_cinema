# Generated by Django 4.2 on 2025-09-08 17:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("movies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="actor",
            name="country",
        ),
        migrations.RemoveField(
            model_name="director",
            name="country",
        ),
        migrations.AlterModelOptions(
            name="genre",
            options={},
        ),
        migrations.AlterModelOptions(
            name="movie",
            options={},
        ),
        migrations.RemoveIndex(
            model_name="movie",
            name="movies_year_1feb9b_idx",
        ),
        migrations.RemoveIndex(
            model_name="movie",
            name="movies_title_179e04_idx",
        ),
        migrations.RemoveField(
            model_name="genre",
            name="description",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="actors",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="countries",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="duration",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="imdb_rating",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="kinopoisk_rating",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="updated_at",
        ),
        migrations.AddField(
            model_name="movie",
            name="country",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name="genre",
            name="name",
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name="movie",
            name="description",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="movie",
            name="director",
            field=models.CharField(blank=True, default=343, max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="movie",
            name="genres",
            field=models.ManyToManyField(to="movies.genre"),
        ),
        migrations.AlterField(
            model_name="movie",
            name="image_url",
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AlterField(
            model_name="movie",
            name="title",
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name="movie",
            name="year",
            field=models.IntegerField(),
        ),
        migrations.AlterModelTable(
            name="genre",
            table=None,
        ),
        migrations.AlterModelTable(
            name="movie",
            table=None,
        ),
        migrations.DeleteModel(
            name="Actor",
        ),
        migrations.DeleteModel(
            name="Country",
        ),
        migrations.DeleteModel(
            name="Director",
        ),
        migrations.AddField(
            model_name="userpreferences",
            name="disliked_movies",
            field=models.ManyToManyField(
                blank=True, related_name="disliked_by", to="movies.movie"
            ),
        ),
        migrations.AddField(
            model_name="userpreferences",
            name="favorite_genres",
            field=models.ManyToManyField(blank=True, to="movies.genre"),
        ),
        migrations.AddField(
            model_name="userpreferences",
            name="liked_movies",
            field=models.ManyToManyField(
                blank=True, related_name="liked_by", to="movies.movie"
            ),
        ),
        migrations.AddField(
            model_name="userpreferences",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="rating",
            name="movie",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="movies.movie"
            ),
        ),
        migrations.AddField(
            model_name="rating",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rating",
            unique_together={("user", "movie")},
        ),
    ]
